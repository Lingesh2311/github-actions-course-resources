name: Demo Project for Job Artifacts & Outputs # Name of the workflow

on: # Define the event that triggers the workflow
  push: # Trigger the workflow on push events
    paths: # Only trigger if changes are made to specific paths
      - 'Code/05 Environment Variables & Secrets/01 Starting Project/**' # Path to monitor for changes
    branches: # Only trigger on specific branches
      - main # Branch to monitor for changes
  workflow_dispatch:

env:
  MONGODB_DB_NAME: gha-demo

jobs:
  test_stage:
    runs-on: ubuntu-latest
    environment: testing
    env: # since we have mentioned the environment to be "testing", the secrets specific to that env will be used
      MONGODB_CLUSTER_ADDRESS: cluster0.14woweq.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    steps:
      - name: Get Code # Step to checkout the code
        uses: actions/checkout@v4.1.5

      - name: Set up Node.js # Step to setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18 # Specify the Node.js version

      - name: Cache dependencies # Step to cache the npm dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.nom # directory that will need to be cached
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # builds a hash on all the available package-lock.json files

      - name: Install dependencies
        run: npm ci
        working-directory: 'Code/05 Environment Variables & Secrets/01 Starting Project/'

      - name: Run Server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB AAtlas to accept requests from anywhere!

      - name: Run tests
        run: npm run test
        working-directory: 'Code/05 Environment Variables & Secrets/01 Starting Project/'

      - name: Output information
        run: |
          echo "MONGODBB_USERNAME: $MONGODB_USERNAME"

  deploy_stage:
    needs: test_stage
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        env:
          PORT: 3000
          run: |
            echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
            echo "MONGODB_USERNAME: $MONGODB_USERNAME"
            echo "${{ env.PORT }}"
